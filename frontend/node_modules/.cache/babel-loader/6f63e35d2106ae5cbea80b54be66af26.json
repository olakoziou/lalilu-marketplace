{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    items: []\n  },\n  reducers: {\n    getProducts: (state, action) => {\n      state.items = action.payload;\n    }\n  }\n});\nexport const {\n  getProducts\n} = categorySlice.actions;\nexport const fetchCategoryProducts = category => {\n  return async dispatch => {\n    try {\n      const response = await axios(`/api/products?category=${category}`);\n      const data = await response.data.data;\n      console.log(data);\n      dispatch(getProducts(data));\n    } catch {}\n  };\n};\nexport default categorySlice.reducer;","map":{"version":3,"sources":["/home/olakoziou/Pulpit/Code/marketplace/lalilu-marketplace/frontend/src/redux/singleCategorySlice.js"],"names":["createSlice","axios","categorySlice","name","initialState","items","reducers","getProducts","state","action","payload","actions","fetchCategoryProducts","category","dispatch","response","data","console","log","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGF,WAAW,CAAC;AACvCG,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAFyB;AAGvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACD;AAHO;AAH6B,CAAD,CAAjC;AAUP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAkBL,aAAa,CAACS,OAAtC;AAEP,OAAO,MAAMC,qBAAqB,GAAIC,QAAD,IAAc;AACjD,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMd,KAAK,CAAE,0BAAyBY,QAAS,EAApC,CAA5B;AAEA,YAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,CAAcA,IAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,MAAAA,QAAQ,CAACP,WAAW,CAACS,IAAD,CAAZ,CAAR;AACD,KAND,CAME,MAAM,CAAE;AACX,GARD;AASD,CAVM;AAYP,eAAed,aAAa,CAACiB,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState: { items: [] },\n  reducers: {\n    getProducts: (state, action) => {\n      state.items = action.payload;\n    },\n  },\n});\n\nexport const { getProducts } = categorySlice.actions;\n\nexport const fetchCategoryProducts = (category) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios(`/api/products?category=${category}`);\n\n      const data = await response.data.data;\n      console.log(data);\n      dispatch(getProducts(data));\n    } catch {}\n  };\n};\n\nexport default categorySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}